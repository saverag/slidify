png("plot2.png", width = 480, height = 480)
plot(NEIyears, type="l", col="red")
dev.off()
NEIyears<-aggregate(Emissions~year, NEI, sum)
png("plot1.png", width = 480, height = 480)
plot(NEIyears, type="l", col="red")
dev.off()
head(SCC)
names(SCC)
SCC$EI.Sector
levels(SCC$EI.Sector)
names(SCC)
levels(SCC$Option.Group)
SCCmer<-SCC[1:2]
head(SCCmer)
?merge
head(NEI)
NEIf2<-merge(NEIFilter, SCCmer)
NEIf2<-merge(NEIfilter, SCCmer)
NEIf2
View(NEIf2)
head(NEIfilter)
NEIyears<-aggregate(Emissions~year*type, NEIfilter, sum)
NEIyears
qplot(year, Emissions, data-NEIyears, facets = .~type)
qplot(year, Emissions, data=NEIyears, facets = .~type)
qplot(year, Emissions, data=NEIyears, facets = type~.)
qplot(year, Emissions, data=NEIyears, facets = type~., geom="line")
qplot(year, Emissions, data=NEIyears, facets = type~., geom="line", color = mopos)
qplot(year, Emissions, data=NEIyears, facets = type~., geom="line", color = "red")
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red")
NEIfilter<-NEI[NEI$fips == "24510",]
NEIyears<-aggregate(Emissions~year*type, NEIfilter, sum)
png("plot3.png", width = 480, height = 480)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red")
dev.off()
guides(fill=FALSE)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red", guides(fill=FALSE))
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red", fill=FALSE)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red",)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red", legend= FALSE)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red", guides=FALSE)
qplot(year, Emissions, data=NEIyears, facets = type~., geom=c("line", "point"), color = "red",)+guides(fill=FALSE)
ggplot(data=NEIyears, aes(x=year, y=Emissioms), facets = type~.)
ggplot(data=NEIyears, aes(x=year, y=Emissioms), facets = type~.)+geom_lines()
ggplot(data=NEIyears, aes(x=year, y=Emissioms), facets = type~.)+geom(c("line", "point"))
ggplot(data=NEIyears, aes(x=year, y=Emissioms), facets = type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions), facets = type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, group=type), facets = type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, facets=type), facets = type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions))+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions), color="red")+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions), fill="red")+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, fill="red")+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, fill="red"))+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, fill=type))+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()+guides(fill=FALSE)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()+guides(fill=FALSE)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()+guides(color=FALSE)
png("plot3.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()+guides(color=FALSE)
dev.off()
SCC
head(SCC)
SCCfiltred= SCC[SCC$EI.Sector ==  "Fuel Comb - Comm/Institutional - Coal" | SCC$EI.Sector ==  "Fuel Comb - Electric Generation - Coal" |  SCC$EI.Sector ==  "Fuel Comb - Industrial Boilers, ICEs - Coal",]
in
?in
?exist
NEIfiltred<-subset(NEI, is.element(SCC, SCC$SCC))
is.element(NEI$SCC, SCC$SCC))
is.element(NEI$SCC, SCC$SCC)
is.element(NEI$SCC, SCCfiltred$SCC)
NEIfilter<-NEI[is.element(NEI$SCC, SCCfiltred$SCC),]
NEIfilter
NEIyears<-aggregate(Emissions~year, NEIfilter, sum)
png("plot4.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color=type))+facet_grid(type~.)+geom_line() + geom_point()+guides(color=FALSE)
dev.off()
png("plot4.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="red"))+geom_line() + geom_point()+guides(color=FALSE)
dev.off()
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="red"))+geom_line() + geom_point()+guides(color=FALSE)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="red"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Coal combustion emission")
png("plot4.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="red"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Coal combustion emission")
dev.off()
levels(SCC$EI.Sector)
levels(SCCfiltred$EI.Sector)
?grep
SCCfiltred= SCC[grepl(Vehicle, SCC$EI.Sector),]
SCCfiltred= SCC[grepl("Vehicle", SCC$EI.Sector),]
SCCfiltred
head(SCCfiltred)
NEIfilter<-NEI[is.element(NEI$SCC, SCCfiltred$SCC),]
NEIfilter<-NEI[NEI$fips == "24510",]
NEIfilter<-NEIfilter[is.element(NEIfilter$SCC, SCCfiltred$SCC),]
NEIyears<-aggregate(Emissions~year, NEIfilter, sum)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="blue"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Motor Vehicle Sources")
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="blue"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Motor Vehicle Sources in Baltimore")
png("plot5.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="blue"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Motor Vehicle Sources in Baltimore")
dev.off()
NEIfilter<-NEI[NEI$fips == "24510" | NEI$fips == "06037",]
NEIfilter<-NEIfilter[is.element(NEIfilter$SCC, SCCfiltred$SCC),]
NEIyears<-aggregate(Emissions~year*fips, NEIfilter, sum)
ggplot(data=NEIyears, aes(x=year, y=Emissions, color="blue"))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Motor Vehicle Sources in Baltimore")
ggplot(data=NEIyears, aes(x=year, y=Emissions, group=fips, color=fips))+geom_line() + geom_point()+guides(color=FALSE)+ggtitle("Motor Vehicle Sources in Baltimore")
ggplot(data=NEIyears, aes(x=year, y=Emissions, group=fips, color=fips))+geom_line() + geom_point()+ggtitle("Motor Vehicle Sources in Baltimore")
NEI$fips[NEI$fips == "24510"]
NEIyears$fips[NEIyears$fips == "24510"]<-"Baltimore""
NEIyears$fips[NEIyears$fips == "24510"]<-"Baltimore"
NEIyears$fips[NEIyears$fips == "06037"]<-"Los Angeles Country"
ggplot(data=NEIyears, aes(x=year, y=Emissions, group=fips, color=fips))+geom_line() + geom_point()+ggtitle("Motor Vehicle Sources in Baltimore")
png("plot6.png", width = 480, height = 480)
ggplot(data=NEIyears, aes(x=year, y=Emissions, group=fips, color=fips))+geom_line() + geom_point()+ggtitle("Motor Vehicle Sources in Baltimore and Los Angeles")
dev.off()
A<-read.csv("repdata-data-StormData.csv")
head(A)
rawdata<-A
A<-0
A<-read.csv("repdata-data-StormData.csv.bz2")
A==rawdata
A[1,1]==rawdata[1,1]
A[1,]==rawdata[1,]
A[1]==rawdata[1]
A<-0
head(rawdata)
install.packages("reshape2")
?aggregate
A<-aggregate(rawdata)
A<-aggregate(rawdata, sum)
aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, rawdata, sum)
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, rawdata, function(x) cbind(sum(x), mean(x), median(x), count(x)))
library(plyr)
count
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, rawdata, function(x) cbind(sum(x), mean(x), median(x), count(x)))
sordata
head(sordata)
sordata<-aggregate(FATALITIES~EVTYPE, rawdata, function(x) cbind(sum(x), mean(x), median(x), count(x)))
head(sordata)
sordata<-aggregate(FATALITIES~EVTYPE, rawdata, function(x) cbind(sum=sum(x), mean=mean(x), median=median(x), events=count(x)))
sordata<-aggregate(FATALITIES~EVTYPE, data = rawdata, function(x) c(Total=sum(x), mean=mean(x), median=median(x), events=count(x)))
sordata<-aggregate(FATALITIES~EVTYPE, data = rawdata, FUN = function(x) c(Total=sum(x), mn=mean(x), med=median(x), events=count(x)))
sordata<-aggregate(FATALITIES~EVTYPE, data = rawdata, FUN = function(x) c(Total=sum(x), mn=mean(x), med=median(x), events=length(x)))
head(sordata)
names(sordata)
sordata$FATALITIES.mn
sordata$FATALITIES
sordata$FATALITIES$mn==0
sordata$FATALITIES==0
sordata$FATALITIES
(sordata$FATALITIES)$mn
sordata$FATALITIES[1]
sordata$FATALITIES[1,]
sordata$FATALITIES[,1]
sordata[!(sordata$FATALITIES[1,]==0),]
(sordata$FATALITIES[1,]
)
sordata$FATALITIES[4,]
sordata[4,]
sordata[4,1]==0
sordata[4,1]!=0
sordata[4,1]
sordata[4,2]
sordata[4,2][1]
sordata[4,2][1]!=0
sordata[,2][1]!=0
sordata[,2][,1]!=0
sordata[sordata[,2][,1]!=0,]
plot(sordata)
plot(sordata[sordata[,2][,1]!=0,])
length(sordata[sordata[,2][,1]!=0,])
length(sordata[sordata[,2][,1]!=0,][,1])
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = rawdata, sum(x))
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = rawdata, sum)
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = rawdata, sum)
sordata
summary(sordata)
print(sordata)
plot(sordata)
plot(sordata[,1:2])
hist(sordata)
hist(sordata)
plot(sordata[,1])
hist(sordata[,2])
sordata2<-sordata[!(sordata$FATALITIES == 0 & sordata$INJURIES == 0 & sordata$PROPDMG == 0)]
sordata2<-sordata[!(sordata$FATALITIES == 0 & sordata$INJURIES == 0 & sordata$PROPDMG == 0),]
sordata2
sordata<-sordata[!(sordata$FATALITIES == 0 & sordata$INJURIES == 0 & sordata$PROPDMG == 0),]
summary(sordata)
numbers<-aggregate(.~EVTYPE, data = rawdata, length)
numbers<-aggregate(INJURES~EVTYPE, data = rawdata, length)
numbers<-aggregate(INJURIES~EVTYPE, data = rawdata, length)
numbers
sordata
sordata[1,]
sordata[,1]
?grep(sordata[1,])
gsub("[/\]", " ", sordata[1,])
gsub("[/\\]", " ", sordata[1,])
sordata[1,]
gsub("/", " ", sordata[1,])
gsub("\\", " ", sordata[1,])
gsub("\", " ", sordata[1,])
sordata[1,]
gsub("\", " ", sordata[,1])
gsub(".", " ", sordata[,1])
gsub("\.", " ", sordata[,1])
gsub("\/", " ", sordata[,1])
gsub("/.", " ", sordata[,1])
gsub("[1-9]", " ", sordata[,1])
gsub("[1-9/(/)]", " ", sordata[,1])
gsub("[1-90/./(/)]", " ", sordata[,1])
gsub("[1-90/./(/)/\]", " ", sordata[,1])
gsub("[1-90/./(/)/\\]", " ", sordata[,1])
trim(gsub("[1-90/./(/)/\\]", " ", sordata[,1]))
tolower(gsub("[1-90/./(/)/\\]", " ", sordata[,1]))
tolower(gsub("[1-90/./(/)/\\]", " ", sordata[,1]))
A<-tolower(gsub("[1-90/./(/)/\\]", " ", sordata[,1]))
gsub("^\\s+|\\s+$", "", A)
gsub(" . ", "", A)
evcl<-tolower(gsub("[1-90/./(/)/\\]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcll
evcl
evcl<-tolower(gsub("[1-90/-/./(/)/\\]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl
evcl<-tolower(gsub("[1-90/-/./(/)/\\]", " ", sordata[,1]))
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl
grep("tstm wind",evcl)
evcl[grep("tstm wind",evcl),]<-"tetmwind"
evcl[grep("tstm wind",evcl),] <- "tstm wind"
evcl[grep("tstm wind",evcl),]
evcl[grep("tstm wind",evcl)]
evcl[grep("^tstm wind",evcl)]
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl
grep("^urban .* flood",evcl)
grep("^urban.*flood",evcl)
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm|^",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("severe ", "", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm|^thundertorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
evcl
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("floods", "flood", evcl)
evcl<-gsub("severe ", "", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm|^thundertorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
sordata[,1]<-evcl
sordata
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = sordata, sum)
sordata
summary(sordata)
ta, sum)
sordata<-sordata[!(sordata$FATALITIES == 0 & sordata$INJURIES == 0 & sordata$PROPDMG == 0),]
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = rawdata, sum)
sordata<-sordata[!(sordata$FATALITIES == 0 & sordata$INJURIES == 0 & sordata$PROPDMG == 0),]
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("fires", "fire", evcl)
evcl<-gsub("currents", "current", evcl)
evcl<-gsub("floods", "flood", evcl)
evcl<-gsub("flooding", "flood", evcl)
evcl<-gsub("severe ", "", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm|^thundertorm",evcl)] <- "thunderstorm"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
sordata[,1]<-evcl
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = sordata, sum)
sordata
sordata<sordata2
sordata<-sordata2
evcl<-tolower(gsub("[1-90/./(/)/\\/-]", " ", sordata[,1]))
evcl<-gsub(" . ", "", evcl)
evcl<-gsub("  ", " ", evcl)
evcl<-gsub("winds", "wind", evcl)
evcl<-gsub("waves", "wave", evcl)
evcl<-gsub("snowfall", "snow", evcl)
evcl<-gsub("fires", "fire", evcl)
evcl<-gsub("currents", "current", evcl)
evcl<-gsub("floods|flooding", "flood", evcl)
evcl<-gsub("lighting|ligntning", "lightning", evcl)
evcl<-gsub("severe ", "", evcl)
evcl<-gsub("^\\s+|\\s+$", "", evcl)
evcl[grep("^tstm wind",evcl)] <- "tstm wind"
evcl[grep("^high wind",evcl)] <- "high wind"
evcl[grep("^thunderstorm|^thunderestorm|^thundeerstorm|^thunderstrom|^thunerstorm|^thundertorm",evcl)] <- "thunderstorm"
evcl[grep("^blizzard",evcl)] <- "blizzard"
evcl[grep("^lightning",evcl)] <- "lightning"
evcl[grep("^heavy snow",evcl)] <- "heavy snow"
evcl[grep("^hail",evcl)] <- "hail"
evcl[grep("^flash flood",evcl)] <- "flash flood"
evcl[grep("^flood flash",evcl)] <- "flash flood"
evcl[grep("^hurricane",evcl)] <- "hurricane"
evcl[grep("^coastal flood",evcl)] <- "coastal flood"
evcl[grep("^tropical storm",evcl)] <- "tropical storm"
evcl[grep("^urban.*flood",evcl)] <- "urban flood"
evcl[grep("torndao",evcl)] <- "tornado"
sordata[,1]<-evcl
sordata<-aggregate(cbind(FATALITIES, INJURIES, PROPDMG)~EVTYPE, data = sordata, sum)
sordata
sordata[order(-sordata[,2])]
sordata[order(-sordata$FATALITIES)]
sordata[order(-sordata$FATALITIES),]
byFat<-sordata[order(-sordata$FATALITIES),][1:10,]
byInj<-sordata[order(-sordata$INJURIES),][1:10,]
byProp<-sordata[order(-sordata$PROPDMG),][1:10,]
byProp
byInj
byFat
plot(byFat)
plot(byFat$EVTYPE, byFat$FATALITIES)
byFat$FATALITIES
plot(byFat$EVTYPE, byFat$FATALITIES)
byFat$EVTYPE
plot(byFat$EVTYPE, byFat$FATALITIES)
qplot(byFat$EVTYPE, byFat$FATALITIES)
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES, group=fips, color=fips))+geom_line()
library(ggplot2)
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES, group=fips, color=fips))+geom_line()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES))+geom_line()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES))+geom_boxplot()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES), color=EVTYPE)+geom_boxplot()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES), fill=EVTYPE)+geom_boxplot()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES), fill=EVTYPE)+geom_point()
ggplot(data=byFat, aes(x=EVTYPE, y=FATALITIES), fill=EVTYPE)+geom_bar()
ggplot(data=byFat, fill=EVTYPE)+geom_bar()
ggplot(data=byFat, aes(factor(EVTYPE)), fill=EVTYPE)+geom_bar()
ggplot(data=byFat, aes(x = factor(EVTYPE), y = FATALITIES), fill=EVTYPE)+geom_bar()
ggplot(data=byFat, aes(x = factor(EVTYPE), y = FATALITIES), fill=EVTYPE)+geom_bar(stat = "identity")
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES), fill=EVTYPE)+geom_bar(stat = "identity")
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES), color=EVTYPE)+geom_bar(stat = "identity")
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES), color=EVTYPE)+geom_bar(stat = "identity", color = EVTYPE)
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES), fill=factor(EVTYPE))+geom_bar(stat = "identity")
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
melt
library(melt)
melt.data.frame
library(reshape)
install.packages("reshape")
library(reshape)
melt
melt(byFat, id = "EVTYPE", measure = c("FATALITIES", "INJURIES", "PROPDMG"))
meltFat<-melt(byFat, id = "EVTYPE", measure = c("FATALITIES", "INJURIES", "PROPDMG"))
gplot(data=meltFat, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=meltFat, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=meltFat, aes(x = EVTYPE, y = value, fill=factor(variable)))+geom_bar(stat = "identity")
gplot(data=byFat, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=byFat, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=byInj, aes(x = EVTYPE, y = INJURIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=byProp, aes(x = EVTYPE, y = PROPDMG, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=byInj, aes(x = EVTYPE, y = INJURIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
rbind(byFat, byInj)
?rbind(byFat, byInj)
?rbind(byFat, byInj, byProp)
rbind(byFat, byInj, byProp)
uniq(rbind(byFat, byInj, byProp))
unique(rbind(byFat, byInj, byProp))
ggplot(data=final, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
evcl[grep("^flood flash",evcl)] <- "flash flood"
final<-unique(rbind(byFat, byInj, byProp))
ggplot(data=final, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
ggplot(data=final, aes(x = EVTYPE, y = FATALITIES, fill=factor(EVTYPE)))+geom_bar(stat = "identity")
melted<-melt(final, id = "EVTYPE", measure = c("FATALITIES", "INJURIES", "PROPDMG"))
ggplot(data=final, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.)geom_bar(stat = "identity")
ggplot(data=final, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.)+geom_bar(stat = "identity")
melted<-melt(final, id = "EVTYPE", measure = c("FATALITIES", "INJURIES", "PROPDMG"))
ggplot(data=melted, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.)+geom_bar(stat = "identity")
ggplot(data=melted, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.,"free_y")+geom_bar(stat = "identity")
ggplot(data=melted, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.,space="free_y")+geom_bar(stat = "identity")
ggplot(data=melted, aes(x = EVTYPE, y = value, fill=factor(EVTYPE)))+facet_grid(variable~.,scales="free_y")+geom_bar(stat = "identity")
setwd("E:/institute/coursera/shinyapp/slides")
library(slidify)
publish(user = "saverag", repo = "slidify")
publish(user = "saverag", repo = "slidy")
slidify("index.Rmd")
setwd("E:/institute/coursera/shinyapp/slides/Car Choice")
setwd("E:/institute/coursera/shinyapp/slides/Car Choice")
slidify("index.Rmd")
publish(user = "saverag", repo = "slidy")
